/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
  ListNode* ReverseList(ListNode *head)
  {
    ListNode* dummy = NULL;
    ListNode* nex=NULL;
    while(head!=NULL)
    {
       nex=head->next;
       head->next=dummy;
       dummy=head;
       head=nex;

    }
    return dummy;
}
int Solution::lPalin(ListNode* A) {
   
     ListNode* slow=A;
    ListNode* fast=A;
    while(fast->next!=NULL&&fast->next->next!=NULL)
    {
        slow=slow->next;
        fast=fast->next->next;
    }
    slow->next=ReverseList(slow->next);
    slow=slow->next;
    while(slow!=NULL)
    {
        if(A->val!=slow->val)
        return 0;
        A=A->next;
        slow=slow->next;
    }
    return 1;
}

