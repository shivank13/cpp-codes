/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
void inorder(TreeNode* A,vector<int>&res)
{
    stack<TreeNode *>s;
   
    s.push(A);
     TreeNode * curr=A->left;
     while(curr||!s.empty())
     {
         while(curr!=NULL)
         {
             s.push(curr);
             curr=curr->left;
         }
         TreeNode* temp=s.top();
         res.push_back(temp->val);
         s.pop();
         curr=temp->right;
     }
}


vector<int> Solution::inorderTraversal(TreeNode* A) {
    vector<int>res;
    inorder(A,res);
    return res;
}
